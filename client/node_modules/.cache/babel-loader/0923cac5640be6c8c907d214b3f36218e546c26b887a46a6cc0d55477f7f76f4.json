{"ast":null,"code":"var _jsxFileName = \"/Users/nishankjain/anar/chatgpt-clone/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([{\n    user: 'gpt',\n    message: 'How can I help you today?'\n  }, {\n    user: 'me',\n    message: 'I want to use chatgpt 2 today'\n  }]);\n  function clearChat() {\n    setChatLog([]);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: 'me',\n      message: `${input}`\n    }];\n    await setInput('');\n    try {\n      const messages = chatLogNew.map(message => message.message).join('\\n');\n      const response = await fetch('http://localhost:3080', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messages\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setChatLog([...chatLogNew, {\n        user: 'gpt',\n        message: `${data.message}`\n      }]);\n    } catch (error) {\n      console.error('There was an error with the fetch call:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"New chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"chat-input-textarea\",\n            placeholder: \"Send a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"StuJ6sGRafAaQ4YYmf0i/kL432o=\");\n_c = App;\nconst ChatMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user === 'gpt' && 'chatgpt'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${message.user === 'gpt' && 'chatgpt'}`,\n        children: message.user === 'gpt' && /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: 24,\n          height: 24,\n          fill: \"none\",\n          className: \"icon-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            x: -9999,\n            y: -9999,\n            children: 'ChatGPT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"white\",\n            d: \"M21.97 9.875a5.832 5.832 0 0 0-.501-4.791 5.899 5.899 0 0 0-6.354-2.83A5.833 5.833 0 0 0 10.716.293a5.9 5.9 0 0 0-5.628 4.084 5.834 5.834 0 0 0-3.901 2.83 5.9 5.9 0 0 0 .726 6.917 5.833 5.833 0 0 0 .501 4.791 5.9 5.9 0 0 0 6.354 2.83 5.833 5.833 0 0 0 4.4 1.961 5.899 5.899 0 0 0 5.629-4.086 5.834 5.834 0 0 0 3.9-2.83 5.9 5.9 0 0 0-.728-6.915Zm-8.8 12.302a4.375 4.375 0 0 1-2.809-1.016c.036-.019.098-.053.139-.078l4.662-2.693a.757.757 0 0 0 .383-.664v-6.572l1.97 1.138a.07.07 0 0 1 .039.054v5.443a4.393 4.393 0 0 1-4.384 4.388ZM3.742 18.15a4.373 4.373 0 0 1-.523-2.94c.035.021.095.058.139.083l4.662 2.693a.759.759 0 0 0 .766 0l5.692-3.286v2.276a.07.07 0 0 1-.028.06l-4.713 2.721a4.393 4.393 0 0 1-5.994-1.606ZM2.515 7.973A4.372 4.372 0 0 1 4.8 6.049l-.002.16v5.386a.757.757 0 0 0 .383.663l5.692 3.286-1.97 1.138a.07.07 0 0 1-.067.006l-4.715-2.724a4.393 4.393 0 0 1-1.606-5.992Zm16.19 3.768-5.692-3.287 1.971-1.137a.071.071 0 0 1 .066-.006l4.713 2.721a4.389 4.389 0 0 1-.678 7.919v-5.547a.757.757 0 0 0-.38-.663Zm1.961-2.952a5.56 5.56 0 0 0-.138-.083l-4.662-2.693a.76.76 0 0 0-.766 0L9.408 9.299V7.023a.07.07 0 0 1 .028-.06l4.712-2.719a4.388 4.388 0 0 1 6.518 4.544Zm-12.33 4.056-1.971-1.138a.07.07 0 0 1-.038-.054V6.21a4.388 4.388 0 0 1 7.196-3.369 4.062 4.062 0 0 0-.138.078L8.723 5.612a.757.757 0 0 0-.383.663l-.004 6.571Zm1.071-2.308 2.535-1.464 2.536 1.463v2.927l-2.535 1.463-2.535-1.463v-2.926Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","input","setInput","chatLog","setChatLog","user","message","clearChat","handleSubmit","e","preventDefault","chatLogNew","messages","map","join","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","ChatMessage","onSubmit","rows","value","onChange","target","placeholder","_c","xmlns","width","height","fill","x","y","d","_c2","$RefreshReg$"],"sources":["/Users/nishankjain/anar/chatgpt-clone/client/src/App.js"],"sourcesContent":["import './App.css';\nimport './normal.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([\n    {\n      user: 'gpt',\n      message: 'How can I help you today?',\n    },\n    {\n      user: 'me',\n      message: 'I want to use chatgpt 2 today',\n    },\n  ]);\n\n  function clearChat() {\n    setChatLog([]);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, { user: 'me', message: `${input}` }];\n    await setInput('');\n\n    try {\n      const messages = chatLogNew.map(message => message.message).join('\\n');\n      const response = await fetch('http://localhost:3080', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: messages,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setChatLog([...chatLogNew, { user: 'gpt', message: `${data.message}` }]);\n    } catch (error) {\n      console.error('There was an error with the fetch call:', error);\n    }\n  }\n\n  return (\n    <div className='App'>\n      <aside className='sidemenu'>\n        <div className='side-menu-button' onClick={clearChat}>\n          <span>+ </span>\n          New chat\n        </div>\n      </aside>\n      <section className='chatbox'>\n        <div className='chat-log'>\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n        </div>\n        <div className='chat-input-holder'>\n          <form onSubmit={handleSubmit}>\n            <input\n              rows='1'\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              className='chat-input-textarea'\n              placeholder='Send a message'></input>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className={`chat-message ${message.user === 'gpt' && 'chatgpt'}`}>\n      <div className='chat-message-center'>\n        <div className={`avatar ${message.user === 'gpt' && 'chatgpt'}`}>\n          {message.user === 'gpt' && (\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              width={24}\n              height={24}\n              fill='none'\n              className='icon-md'>\n              <text x={-9999} y={-9999}>\n                {'ChatGPT'}\n              </text>\n              <path\n                fill='white'\n                d='M21.97 9.875a5.832 5.832 0 0 0-.501-4.791 5.899 5.899 0 0 0-6.354-2.83A5.833 5.833 0 0 0 10.716.293a5.9 5.9 0 0 0-5.628 4.084 5.834 5.834 0 0 0-3.901 2.83 5.9 5.9 0 0 0 .726 6.917 5.833 5.833 0 0 0 .501 4.791 5.9 5.9 0 0 0 6.354 2.83 5.833 5.833 0 0 0 4.4 1.961 5.899 5.899 0 0 0 5.629-4.086 5.834 5.834 0 0 0 3.9-2.83 5.9 5.9 0 0 0-.728-6.915Zm-8.8 12.302a4.375 4.375 0 0 1-2.809-1.016c.036-.019.098-.053.139-.078l4.662-2.693a.757.757 0 0 0 .383-.664v-6.572l1.97 1.138a.07.07 0 0 1 .039.054v5.443a4.393 4.393 0 0 1-4.384 4.388ZM3.742 18.15a4.373 4.373 0 0 1-.523-2.94c.035.021.095.058.139.083l4.662 2.693a.759.759 0 0 0 .766 0l5.692-3.286v2.276a.07.07 0 0 1-.028.06l-4.713 2.721a4.393 4.393 0 0 1-5.994-1.606ZM2.515 7.973A4.372 4.372 0 0 1 4.8 6.049l-.002.16v5.386a.757.757 0 0 0 .383.663l5.692 3.286-1.97 1.138a.07.07 0 0 1-.067.006l-4.715-2.724a4.393 4.393 0 0 1-1.606-5.992Zm16.19 3.768-5.692-3.287 1.971-1.137a.071.071 0 0 1 .066-.006l4.713 2.721a4.389 4.389 0 0 1-.678 7.919v-5.547a.757.757 0 0 0-.38-.663Zm1.961-2.952a5.56 5.56 0 0 0-.138-.083l-4.662-2.693a.76.76 0 0 0-.766 0L9.408 9.299V7.023a.07.07 0 0 1 .028-.06l4.712-2.719a4.388 4.388 0 0 1 6.518 4.544Zm-12.33 4.056-1.971-1.138a.07.07 0 0 1-.038-.054V6.21a4.388 4.388 0 0 1 7.196-3.369 4.062 4.062 0 0 0-.138.078L8.723 5.612a.757.757 0 0 0-.383.663l-.004 6.571Zm1.071-2.308 2.535-1.464 2.536 1.463v2.927l-2.535 1.463-2.535-1.463v-2.926Z'\n              />\n            </svg>\n          )}\n        </div>\n        <div className='message'>{message.message}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}